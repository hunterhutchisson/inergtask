{"ast":null,"code":"var _jsxFileName = \"/Users/hunterhutchisson/digital-crafts/inergtask/src/components/SelectState.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Plot from 'react-plotly.js';\nimport Map from './Map';\nimport { selectState } from '../actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SelectState = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const usData = useSelector(state => state.covidData.usData);\n  const stateData = useSelector(state => state.covidData.stateData);\n  const [selectedState, setSelectedState] = useState(null);\n  const [pieData, setPieData] = useState([]);\n  const [pieLayout, setPieLayout] = useState({});\n  const [barData, setBarData] = useState([]);\n  const [barLayout, setBarLayout] = useState({});\n\n  const handleSelectState = e => {\n    let state = stateData.find(_ref => {\n      let {\n        state\n      } = _ref;\n      return state === e.target.value;\n    }); //         let dataForBar = [{\n    //             y: [state.positive, state.hospitalizedCurrently, (state.positive-state.hospitalizedCurrently-state.death),state.death],\n    //             x: ['Total Cases', 'Active Cases', 'Recovered','Deaths'],\n    //             type: 'bar'\n    //         }]\n    //         let layoutForBar = {\n    //             width: 600,\n    //             height: 500,\n    //             title: `${state.state} covid cases`\n    //         }\n    //         console.log(dataForBar);\n    //         setPieData(dataForPie)\n    //         setPieLayout(layoutForPie)\n    //         setBarData(dataForBar)\n    //         setBarLayout(layoutForBar)\n    //         setSelectedState(state)\n\n    dispatch(selectState(state));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      className: \"height38\",\n      defaultValue: selectedState,\n      onChange: handleSelectState,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        hidden: true,\n        value: \"defaultValue\",\n        children: \"Pick a State\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), stateData.map(state => {\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          value: state.state,\n          children: state.state\n        }, state.state, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 20\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this), selectedState ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setSelectedState(null),\n      children: \"Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true);\n};\n\n_s(SelectState, \"im3F6LfLR6TyW22XBLjCmJLLPXM=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = SelectState;\nexport default SelectState;\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectState\");","map":{"version":3,"sources":["/Users/hunterhutchisson/digital-crafts/inergtask/src/components/SelectState.jsx"],"names":["React","useState","useSelector","useDispatch","Plot","Map","selectState","SelectState","dispatch","usData","state","covidData","stateData","selectedState","setSelectedState","pieData","setPieData","pieLayout","setPieLayout","barData","setBarData","barLayout","setBarLayout","handleSelectState","e","find","target","value","map"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,SAASC,WAAT,QAA4B,YAA5B;;;;AAGA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACtB,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAMM,MAAM,GAAGP,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACC,SAAN,CAAgBF,MAA1B,CAA1B;AACA,QAAMG,SAAS,GAAGV,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACC,SAAN,CAAgBC,SAA1B,CAA7B;AACA,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCb,QAAQ,CAAC,IAAD,CAAlD;AACA,QAAM,CAACc,OAAD,EAAUC,UAAV,IAAwBf,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACgB,SAAD,EAAYC,YAAZ,IAA4BjB,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACkB,OAAD,EAAUC,UAAV,IAAwBnB,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACoB,SAAD,EAAYC,YAAZ,IAA4BrB,QAAQ,CAAC,EAAD,CAA1C;;AAEA,QAAMsB,iBAAiB,GAAIC,CAAD,IAAO;AAC7B,QAAId,KAAK,GAAGE,SAAS,CAACa,IAAV,CAAe;AAAA,UAAC;AAACf,QAAAA;AAAD,OAAD;AAAA,aAAYA,KAAK,KAAKc,CAAC,CAACE,MAAF,CAASC,KAA/B;AAAA,KAAf,CAAZ,CAD6B,CAGrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACQnB,IAAAA,QAAQ,CAACF,WAAW,CAACI,KAAD,CAAZ,CAAR;AACH,GApBD;;AAqBA,sBACI;AAAA,4BACA;AAAQ,MAAA,SAAS,EAAC,UAAlB;AAA6B,MAAA,YAAY,EAAEG,aAA3C;AAA0D,MAAA,QAAQ,EAAEU,iBAApE;AAAA,8BACE;AAAQ,QAAA,MAAM,MAAd;AAAe,QAAA,KAAK,EAAC,cAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEGX,SAAS,CAACgB,GAAV,CAAclB,KAAK,IAAI;AACtB,4BAAO;AAA0B,UAAA,KAAK,EAAEA,KAAK,CAACA,KAAvC;AAAA,oBAA+CA,KAAK,CAACA;AAArD,WAAaA,KAAK,CAACA,KAAnB;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD,OAFA,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,EAOCG,aAAa,gBAEd,qCAFc,GAOd,IAdA,eAmBE;AAAQ,MAAA,OAAO,EAAE,MAAIC,gBAAgB,CAAC,IAAD,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAnBF;AAAA,kBADJ;AAwBH,CAvDD;;GAAMP,W;UACeJ,W,EACFD,W,EACGA,W;;;KAHhBK,W;AAyDN,eAAeA,WAAf","sourcesContent":["import React, {useState} from 'react'\nimport {useSelector, useDispatch} from 'react-redux';\nimport Plot from 'react-plotly.js';\nimport Map from './Map';\nimport { selectState } from '../actions'\n\n\nconst SelectState = () => {\n    const dispatch = useDispatch();\n    const usData = useSelector(state => state.covidData.usData)\n    const stateData = useSelector(state => state.covidData.stateData)\n    const [selectedState, setSelectedState] = useState(null)\n    const [pieData, setPieData] = useState([])\n    const [pieLayout, setPieLayout] = useState({})\n    const [barData, setBarData] = useState([])\n    const [barLayout, setBarLayout] = useState({})\n\n    const handleSelectState = (e) => {\n        let state = stateData.find(({state})=> state === e.target.value)\n\n//         let dataForBar = [{\n//             y: [state.positive, state.hospitalizedCurrently, (state.positive-state.hospitalizedCurrently-state.death),state.death],\n//             x: ['Total Cases', 'Active Cases', 'Recovered','Deaths'],\n//             type: 'bar'\n//         }]\n//         let layoutForBar = {\n//             width: 600,\n//             height: 500,\n//             title: `${state.state} covid cases`\n//         }\n//         console.log(dataForBar);\n//         setPieData(dataForPie)\n//         setPieLayout(layoutForPie)\n//         setBarData(dataForBar)\n//         setBarLayout(layoutForBar)\n//         setSelectedState(state)\n        dispatch(selectState(state))\n    }\n    return (\n        <>\n        <select className=\"height38\" defaultValue={selectedState} onChange={handleSelectState}>\n          <option hidden value=\"defaultValue\">Pick a State</option>\n          {stateData.map(state => {\n            return <option key={state.state} value={state.state}>{state.state}</option>\n          })}\n        </select>\n        {selectedState \n        ? \n        <>\n        {/* <Plot data={pieData} layout={pieLayout} />\n        <Map stateObj={selectedState} data={barData} layout={barLayout}/> */}\n        </>\n        : \n        null\n        }\n\n\n\n          <button onClick={()=>setSelectedState(null)}>Reset</button>\n        \n        </>\n    )\n}\n\nexport default SelectState\n"]},"metadata":{},"sourceType":"module"}