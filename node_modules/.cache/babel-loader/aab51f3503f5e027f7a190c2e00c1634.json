{"ast":null,"code":"var _jsxFileName = \"/Users/hunterhutchisson/digital-crafts/inergtask/src/components/SelectState.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport Plot from 'react-plotly.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SelectState = () => {\n  _s();\n\n  const usData = useSelector(state => state.covidData.usData);\n  const stateData = useSelector(state => state.covidData.stateData);\n  const [selectedState, setSelectedState] = useState(null);\n  const [pieData, setPieData] = useState([]);\n  const [pieLayout, setPieLayout] = useState({});\n\n  const handleSelectState = e => {\n    let state = stateData.find(_ref => {\n      let {\n        state\n      } = _ref;\n      return state === e.target.value;\n    });\n    let data = [{\n      values: [state.hospitalizedCurrently, state.death, state.positive - state.hospitalizedCurrently - state.death],\n      labels: ['Active Cases', 'Deaths', 'Recovered'],\n      domain: {\n        column: 0\n      },\n      name: `${state.state} Covid Cases`,\n      hoverinfo: 'label+value',\n      hole: .4,\n      type: 'pie'\n    }, {\n      values: [usData.positive - state.positive, state.positive],\n      labels: ['Rest of the US', state.state],\n      domain: {\n        column: 1\n      },\n      name: `${state.state} vs Rest of the US`,\n      hoverinfo: 'label+value',\n      hole: .4,\n      type: 'pie'\n    }];\n    let layout = {\n      title: `${state.state} Covid Breakdown`,\n      annotations: [{\n        font: {\n          size: 8\n        },\n        showarrow: false,\n        text: `${state.state} Covid Cases`,\n        x: 0.17,\n        y: 0.5\n      }, {\n        font: {\n          size: 8\n        },\n        showarrow: false,\n        text: `${state.state} vs \nRest of the US`,\n        x: 0.82,\n        y: 0.5\n      }],\n      height: 400,\n      width: 600,\n      showlegend: false,\n      grid: {\n        rows: 1,\n        columns: 2\n      }\n    };\n    setPieData(data);\n    setPieLayout(layout);\n    setSelectedState(state);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      className: \"height38\",\n      defaultValue: selectedState,\n      onChange: handleSelectState,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        hidden: true,\n        value: \"defaultValue\",\n        children: \"Pick a State\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), stateData.map(state => {\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          value: state.state,\n          children: state.state\n        }, state.state, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 20\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this), selectedState ? /*#__PURE__*/_jsxDEV(Plot, {\n      data: pieData,\n      layout: pieLayout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setSelectedState(null),\n      children: \"Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true);\n};\n\n_s(SelectState, \"3pXcy1GavE/YODfwL/GpACKRaX0=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = SelectState;\nexport default SelectState;\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectState\");","map":{"version":3,"sources":["/Users/hunterhutchisson/digital-crafts/inergtask/src/components/SelectState.jsx"],"names":["React","useState","useSelector","Plot","SelectState","usData","state","covidData","stateData","selectedState","setSelectedState","pieData","setPieData","pieLayout","setPieLayout","handleSelectState","e","find","target","value","data","values","hospitalizedCurrently","death","positive","labels","domain","column","name","hoverinfo","hole","type","layout","title","annotations","font","size","showarrow","text","x","y","height","width","showlegend","grid","rows","columns","map"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport {useSelector} from 'react-redux';\nimport Plot from 'react-plotly.js';\n\n\nconst SelectState = () => {\n    const usData = useSelector(state => state.covidData.usData)\n    const stateData = useSelector(state => state.covidData.stateData)\n    const [selectedState, setSelectedState] = useState(null)\n    const [pieData, setPieData] = useState([])\n    const [pieLayout, setPieLayout] = useState({})\n\n    const handleSelectState = (e) => {\n        let state = stateData.find(({state})=> state === e.target.value)\n        let data = [{\n            values: [state.hospitalizedCurrently, state.death, (state.positive - state.hospitalizedCurrently - state.death)],\n            labels: ['Active Cases', 'Deaths', 'Recovered'],\n            domain: {column: 0},\n            name: `${state.state} Covid Cases`,\n            hoverinfo: 'label+value',\n            hole: .4,\n            type: 'pie'\n        },\n        {\n            values: [(usData.positive-state.positive), state.positive],\n            labels: ['Rest of the US', state.state],\n            domain: {column: 1},\n            name: `${state.state} vs Rest of the US`,\n            hoverinfo: 'label+value',\n            hole: .4,\n            type: 'pie'\n        }]\n        let layout = {\n            title: `${state.state} Covid Breakdown`,\n            annotations: [\n                {\n                    font: {\n                    size: 8\n                    },\n                    showarrow: false,\n                    text: `${state.state} Covid Cases`,\n                    x: 0.17,\n                    y: 0.5\n                },\n                {\n                    font: {\n                    size: 8\n                    },\n                    showarrow: false,\n                    text: `${state.state} vs \nRest of the US`,\n                    x: 0.82,\n                    y: 0.5\n                }\n            ],\n            height: 400,\n            width: 600,\n            showlegend: false,\n            grid: {rows: 1, columns: 2}\n        };\n        setPieData(data)\n        setPieLayout(layout)\n        setSelectedState(state)\n    }\n    return (\n        <>\n        <select className=\"height38\" defaultValue={selectedState} onChange={handleSelectState}>\n          <option hidden value=\"defaultValue\">Pick a State</option>\n          {stateData.map(state => {\n            return <option key={state.state} value={state.state}>{state.state}</option>\n          })}\n        </select>\n        {selectedState \n        ? \n        <Plot data={pieData} layout={pieLayout} />\n        : \n        null\n        }\n\n\n\n\n          <button onClick={()=>setSelectedState(null)}>Reset</button>\n        \n        </>\n    )\n}\n\nexport default SelectState\n"]},"metadata":{},"sourceType":"module"}