{"ast":null,"code":"var _jsxFileName = \"/Users/hunterhutchisson/digital-crafts/inergtask/src/components/Sample.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { sampleAction } from '../actions/templateActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Sample() {\n  _s();\n\n  const dispatch = useDispatch();\n  const count = useSelector(state => state.sample.count); //componentDidMount if dependency list is empty\n\n  useEffect(() => {//componentDidUnmount, used as cleanup function\n    // return () => {\n    //     cleanup\n    // }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Redux Template\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch(sampleAction(4)),\n      children: \"click to update global state\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Sample, \"SKySn0iqSoa6An5cU83U7v6WzYk=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Sample;\nexport default Sample;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sample\");","map":{"version":3,"sources":["/Users/hunterhutchisson/digital-crafts/inergtask/src/components/Sample.jsx"],"names":["React","useEffect","useSelector","useDispatch","sampleAction","Sample","dispatch","count","state","sample"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,YAAT,QAA6B,4BAA7B;;;;AAEA,SAASC,MAAT,GAAkB;AAAA;;AACd,QAAMC,QAAQ,GAAGH,WAAW,EAA5B;AACA,QAAMI,KAAK,GAAGL,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACC,MAAN,CAAaF,KAAvB,CAAzB,CAFc,CAId;;AACAN,EAAAA,SAAS,CAAC,MAAM,CAEZ;AACA;AACA;AACA;AACH,GANQ,EAMN,EANM,CAAT;AAOA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAGI;AAAA,gBAAKM;AAAL;AAAA;AAAA;AAAA;AAAA,YAHJ,eAKI;AAAQ,MAAA,OAAO,EAAE,MAAID,QAAQ,CAACF,YAAY,CAAC,CAAD,CAAb,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA,kBADJ;AASH;;GArBQC,M;UACYF,W,EACHD,W;;;KAFTG,M;AAuBT,eAAeA,MAAf","sourcesContent":["import React, {useEffect} from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { sampleAction } from '../actions/templateActions'\n\nfunction Sample() {\n    const dispatch = useDispatch();\n    const count = useSelector(state => state.sample.count)\n\n    //componentDidMount if dependency list is empty\n    useEffect(() => {\n\n        //componentDidUnmount, used as cleanup function\n        // return () => {\n        //     cleanup\n        // }\n    }, [])\n    return (\n        <>\n            <h1>Redux Template</h1>\n\n            <h3>{count}</h3>\n\n            <button onClick={()=>dispatch(sampleAction(4))}>click to update global state</button>\n        </>\n    )\n}\n\nexport default Sample\n"]},"metadata":{},"sourceType":"module"}