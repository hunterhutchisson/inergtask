{"ast":null,"code":"import _objectSpread from\"/Users/hunterhutchisson/digital-crafts/inergtask/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/hunterhutchisson/digital-crafts/inergtask/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{useSelector}from'react-redux';import ReactMapGL,{Marker,Popup}from'react-map-gl';import Plot from'react-plotly.js';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Map=function Map(_ref){var stateObj=_ref.stateObj;var stateData=useSelector(function(state){return state.covidData.stateData;});var _useState=useState(stateObj?[{y:[stateObj.positive,stateObj.hospitalizedCurrently,stateObj.positive-stateObj.hospitalizedCurrently-stateObj.death,stateObj.death],x:['Total Cases','Active Cases','Recovered','Deaths'],type:'bar'}]:\"\"),_useState2=_slicedToArray(_useState,2),dataForBar=_useState2[0],setDataForBar=_useState2[1];var _useState3=useState(stateObj?{width:600,height:500,title:\"\".concat(stateObj.state,\" covid cases\")}:\"\"),_useState4=_slicedToArray(_useState3,2),layoutForBar=_useState4[0],setLayoutForBar=_useState4[1];var _useState5=useState({longitude:-97,latitude:40,width:\"800px\",height:\"500px\",zoom:3}),_useState6=_slicedToArray(_useState5,2),viewport=_useState6[0],setViewport=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),showInfo=_useState8[0],setShowInfo=_useState8[1];var _useState9=useState(null),_useState10=_slicedToArray(_useState9,2),individualShow=_useState10[0],setIndividualShow=_useState10[1];useEffect(function(){var listener=function listener(e){if(e.key===\"Escape\"){setShowInfo(false);}};window.addEventListener(\"keydown\",listener);return function(){window.removeEventListener(\"keydown\",listener);};},[]);return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(ReactMapGL,_objectSpread(_objectSpread({},viewport),{},{mapboxApiAccessToken:process.env.REACT_APP_MAPBOX_TOKEN,mapStyle:\"mapbox://styles/hunterhutch/ckwjv9etg27z614r7bdgamfwl\",onViewportChange:function onViewportChange(viewport){setViewport(viewport);},children:[stateObj?/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(Marker,{latitude:stateObj.coordinates.latitude,longitude:stateObj.coordinates.longitude,children:/*#__PURE__*/_jsx(\"button\",{className:\"btn-size\",onClick:function onClick(e){e.preventDefault();setShowInfo(!showInfo);},children:/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:\"syringe\",className:\"icon-size\"})})})}):/*#__PURE__*/_jsx(_Fragment,{children:stateData.map(function(state){return/*#__PURE__*/_jsx(Marker,{latitude:state.coordinates.latitude,longitude:state.coordinates.longitude,children:/*#__PURE__*/_jsx(\"button\",{className:\"btn-size\",onClick:function onClick(e){e.preventDefault();setShowInfo(!showInfo);setIndividualShow(state);setDataForBar([{y:[state.positive,state.hospitalizedCurrently,state.positive-state.hospitalizedCurrently-state.death,state.death],x:['Total Cases','Active Cases','Recovered','Deaths'],type:'bar'}]);setLayoutForBar({width:400,height:300,title:\"\".concat(state.state,\" covid cases\")});},children:/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:\"syringe\",className:\"icon-size\"})})});})}),showInfo&&stateObj?/*#__PURE__*/_jsx(Popup,{latitude:stateObj.coordinates.latitude,longitude:stateObj.coordinates.longitude,onClose:function onClose(){setShowInfo(false);},children:/*#__PURE__*/_jsx(Plot,{data:dataForBar,layout:layoutForBar})}):null,showInfo&&individualShow?/*#__PURE__*/_jsx(Popup,{latitude:individualShow.coordinates.latitude,longitude:individualShow.coordinates.longitude,onClose:function onClose(){setShowInfo(false);setIndividualShow(null);},children:/*#__PURE__*/_jsx(Plot,{data:dataForBar,layout:layoutForBar})}):null]}))});};export default Map;","map":{"version":3,"sources":["/Users/hunterhutchisson/digital-crafts/inergtask/src/components/Map.jsx"],"names":["React","useState","useEffect","useSelector","ReactMapGL","Marker","Popup","Plot","FontAwesomeIcon","Map","stateObj","stateData","state","covidData","y","positive","hospitalizedCurrently","death","x","type","dataForBar","setDataForBar","width","height","title","layoutForBar","setLayoutForBar","longitude","latitude","zoom","viewport","setViewport","showInfo","setShowInfo","individualShow","setIndividualShow","listener","e","key","window","addEventListener","removeEventListener","process","env","REACT_APP_MAPBOX_TOKEN","coordinates","preventDefault","map"],"mappings":"qQAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,CAAyBC,SAAzB,KAAyC,OAAzC,CACA,OAASC,WAAT,KAA4B,aAA5B,CACA,MAAOC,CAAAA,UAAP,EAAoBC,MAApB,CAA4BC,KAA5B,KAAwC,cAAxC,CACA,MAAOC,CAAAA,IAAP,KAAiB,iBAAjB,CACA,OAASC,eAAT,KAAgC,gCAAhC,C,6IAGA,GAAMC,CAAAA,GAAG,CAAG,QAANA,CAAAA,GAAM,MAAgB,IAAdC,CAAAA,QAAc,MAAdA,QAAc,CACxB,GAAMC,CAAAA,SAAS,CAAGR,WAAW,CAAC,SAAAS,KAAK,QAAIA,CAAAA,KAAK,CAACC,SAAN,CAAgBF,SAApB,EAAN,CAA7B,CAEA,cAAoCV,QAAQ,CAACS,QAAQ,CAAG,CAAC,CACrDI,CAAC,CAAE,CAACJ,QAAQ,CAACK,QAAV,CAAoBL,QAAQ,CAACM,qBAA7B,CAAqDN,QAAQ,CAACK,QAAT,CAAkBL,QAAQ,CAACM,qBAA3B,CAAiDN,QAAQ,CAACO,KAA/G,CAAsHP,QAAQ,CAACO,KAA/H,CADkD,CAErDC,CAAC,CAAE,CAAC,aAAD,CAAgB,cAAhB,CAAgC,WAAhC,CAA4C,QAA5C,CAFkD,CAGrDC,IAAI,CAAE,KAH+C,CAAD,CAAH,CAIlD,EAJyC,CAA5C,wCAAOC,UAAP,eAAmBC,aAAnB,eAKA,eAAwCpB,QAAQ,CAACS,QAAQ,CAAG,CACxDY,KAAK,CAAE,GADiD,CAExDC,MAAM,CAAE,GAFgD,CAGxDC,KAAK,WAAKd,QAAQ,CAACE,KAAd,gBAHmD,CAAH,CAIvD,EAJ8C,CAAhD,yCAAOa,YAAP,eAAqBC,eAArB,eAMA,eAAgCzB,QAAQ,CAAC,CACrC0B,SAAS,CAAC,CAAC,EAD0B,CAErCC,QAAQ,CAAC,EAF4B,CAGrCN,KAAK,CAAE,OAH8B,CAIrCC,MAAM,CAAE,OAJ6B,CAKrCM,IAAI,CAAE,CAL+B,CAAD,CAAxC,yCAAOC,QAAP,eAAiBC,WAAjB,eAQA,eAAgC9B,QAAQ,CAAC,KAAD,CAAxC,yCAAO+B,QAAP,eAAiBC,WAAjB,eACA,eAA4ChC,QAAQ,CAAC,IAAD,CAApD,0CAAOiC,cAAP,gBAAuBC,iBAAvB,gBAEAjC,SAAS,CAAC,UAAM,CACZ,GAAMkC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,CAAD,CAAO,CACpB,GAAGA,CAAC,CAACC,GAAF,GAAU,QAAb,CAAsB,CAClBL,WAAW,CAAC,KAAD,CAAX,CACH,CACJ,CAJD,CAKAM,MAAM,CAACC,gBAAP,CAAwB,SAAxB,CAAmCJ,QAAnC,EACA,MAAM,WAAK,CACPG,MAAM,CAACE,mBAAP,CAA2B,SAA3B,CAAsCL,QAAtC,EACH,CAFD,CAGH,CAVQ,CAUN,EAVM,CAAT,CAWA,mBACI,sCACI,MAAC,UAAD,gCAAgBN,QAAhB,MACA,oBAAoB,CAAEY,OAAO,CAACC,GAAR,CAAYC,sBADlC,CAEA,QAAQ,CAAC,uDAFT,CAGA,gBAAgB,CAAE,0BAAAd,QAAQ,CAAI,CAC1BC,WAAW,CAACD,QAAD,CAAX,CACH,CALD,WAOKpB,QAAQ,cAET,sCACA,KAAC,MAAD,EAAQ,QAAQ,CAAEA,QAAQ,CAACmC,WAAT,CAAqBjB,QAAvC,CAAiD,SAAS,CAAElB,QAAQ,CAACmC,WAAT,CAAqBlB,SAAjF,uBACI,eAAQ,SAAS,CAAC,UAAlB,CAA6B,OAAO,CAAE,iBAACU,CAAD,CAAO,CACnDA,CAAC,CAACS,cAAF,GACAb,WAAW,CAAC,CAACD,QAAF,CAAX,CACD,CAHO,uBAGL,KAAC,eAAD,EAAiB,IAAI,CAAC,SAAtB,CAAgC,SAAS,CAAC,WAA1C,EAHK,EADJ,EADA,EAFS,cAWT,yBACKrB,SAAS,CAACoC,GAAV,CAAc,SAAAnC,KAAK,CAAE,CAClB,mBACA,KAAC,MAAD,EAAQ,QAAQ,CAAEA,KAAK,CAACiC,WAAN,CAAkBjB,QAApC,CAA8C,SAAS,CAAEhB,KAAK,CAACiC,WAAN,CAAkBlB,SAA3E,uBACI,eAAQ,SAAS,CAAC,UAAlB,CAA6B,OAAO,CAAE,iBAACU,CAAD,CAAO,CACzCA,CAAC,CAACS,cAAF,GACAb,WAAW,CAAC,CAACD,QAAF,CAAX,CACAG,iBAAiB,CAACvB,KAAD,CAAjB,CACAS,aAAa,CAAC,CAAC,CACXP,CAAC,CAAE,CAACF,KAAK,CAACG,QAAP,CAAiBH,KAAK,CAACI,qBAAvB,CAA+CJ,KAAK,CAACG,QAAN,CAAeH,KAAK,CAACI,qBAArB,CAA2CJ,KAAK,CAACK,KAAhG,CAAuGL,KAAK,CAACK,KAA7G,CADQ,CAEXC,CAAC,CAAE,CAAC,aAAD,CAAgB,cAAhB,CAAgC,WAAhC,CAA4C,QAA5C,CAFQ,CAGXC,IAAI,CAAE,KAHK,CAAD,CAAD,CAAb,CAKAO,eAAe,CAAC,CACZJ,KAAK,CAAE,GADK,CAEZC,MAAM,CAAE,GAFI,CAGZC,KAAK,WAAKZ,KAAK,CAACA,KAAX,gBAHO,CAAD,CAAf,CAKH,CAdD,uBAcG,KAAC,eAAD,EAAiB,IAAI,CAAC,SAAtB,CAAgC,SAAS,CAAC,WAA1C,EAdH,EADJ,EADA,CAmBH,CApBA,CADL,EAlBJ,CA4CMoB,QAAQ,EAAItB,QAAb,cAED,KAAC,KAAD,EAAO,QAAQ,CAAEA,QAAQ,CAACmC,WAAT,CAAqBjB,QAAtC,CACA,SAAS,CAAElB,QAAQ,CAACmC,WAAT,CAAqBlB,SADhC,CAEA,OAAO,CAAE,kBAAI,CACTM,WAAW,CAAC,KAAD,CAAX,CACH,CAJD,uBAMI,KAAC,IAAD,EAAM,IAAI,CAAEb,UAAZ,CAAwB,MAAM,CAAEK,YAAhC,EANJ,EAFC,CAUA,IAtDL,CAuDMO,QAAQ,EAAIE,cAAb,cAED,KAAC,KAAD,EAAO,QAAQ,CAAEA,cAAc,CAACW,WAAf,CAA2BjB,QAA5C,CACA,SAAS,CAAEM,cAAc,CAACW,WAAf,CAA2BlB,SADtC,CAEA,OAAO,CAAE,kBAAI,CACTM,WAAW,CAAC,KAAD,CAAX,CACAE,iBAAiB,CAAC,IAAD,CAAjB,CACH,CALD,uBAOI,KAAC,IAAD,EAAM,IAAI,CAAEf,UAAZ,CAAwB,MAAM,CAAEK,YAAhC,EAPJ,EAFC,CAWA,IAlEL,IADJ,EADJ,CAwEH,CA5GD,CA8GA,cAAehB,CAAAA,GAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport { useSelector } from 'react-redux';\nimport ReactMapGL, {Marker, Popup} from 'react-map-gl';\nimport Plot from 'react-plotly.js';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\n\nconst Map = ({stateObj}) => {\n    const stateData = useSelector(state => state.covidData.stateData)\n\n    const [dataForBar, setDataForBar] = useState(stateObj ? [{\n        y: [stateObj.positive, stateObj.hospitalizedCurrently, (stateObj.positive-stateObj.hospitalizedCurrently-stateObj.death),stateObj.death],\n        x: ['Total Cases', 'Active Cases', 'Recovered','Deaths'],\n        type: 'bar'\n    }]:\"\")\n    const [layoutForBar, setLayoutForBar] = useState(stateObj ? {\n        width: 600,\n        height: 500,\n        title: `${stateObj.state} covid cases`\n    }:\"\")\n\n    const [viewport, setViewport] = useState({\n        longitude:-97,\n        latitude:40,\n        width: \"800px\",\n        height: \"500px\",\n        zoom: 3\n    })\n\n    const [showInfo, setShowInfo] = useState(false)\n    const [individualShow, setIndividualShow] = useState(null)\n\n    useEffect(() => {\n        const listener = (e) => {\n            if(e.key === \"Escape\"){\n                setShowInfo(false)\n            }\n        }\n        window.addEventListener(\"keydown\", listener)\n        return() =>{\n            window.removeEventListener(\"keydown\", listener)\n        }\n    }, [])\n    return (\n        <>\n            <ReactMapGL {...viewport} \n            mapboxApiAccessToken={process.env.REACT_APP_MAPBOX_TOKEN} \n            mapStyle='mapbox://styles/hunterhutch/ckwjv9etg27z614r7bdgamfwl'\n            onViewportChange={viewport => {\n                setViewport(viewport)\n            }}\n            >\n                {stateObj \n                ?\n                <>\n                <Marker latitude={stateObj.coordinates.latitude} longitude={stateObj.coordinates.longitude}>\n                    <button className=\"btn-size\" onClick={(e) => {\n              e.preventDefault();\n              setShowInfo(!showInfo)\n            }}><FontAwesomeIcon icon=\"syringe\" className=\"icon-size\" /></button>\n                </Marker>\n                </>\n                :\n                <>\n                    {stateData.map(state=>{\n                        return(\n                        <Marker latitude={state.coordinates.latitude} longitude={state.coordinates.longitude}>\n                            <button className=\"btn-size\" onClick={(e) => {\n                                e.preventDefault();\n                                setShowInfo(!showInfo)\n                                setIndividualShow(state)\n                                setDataForBar([{\n                                    y: [state.positive, state.hospitalizedCurrently, (state.positive-state.hospitalizedCurrently-state.death),state.death],\n                                    x: ['Total Cases', 'Active Cases', 'Recovered','Deaths'],\n                                    type: 'bar'\n                                }])\n                                setLayoutForBar({\n                                    width: 400,\n                                    height: 300,\n                                    title: `${state.state} covid cases`\n                                })\n                            }}><FontAwesomeIcon icon=\"syringe\" className=\"icon-size\"/></button>\n                        </Marker>\n                        )\n                    })}\n                </>\n                }\n\n\n                {(showInfo && stateObj)\n                ? \n                <Popup latitude={stateObj.coordinates.latitude} \n                longitude={stateObj.coordinates.longitude}\n                onClose={()=>{\n                    setShowInfo(false)\n                }}\n                >\n                    <Plot data={dataForBar} layout={layoutForBar} />\n                </Popup>\n                :null}\n                {(showInfo && individualShow)\n                ? \n                <Popup latitude={individualShow.coordinates.latitude} \n                longitude={individualShow.coordinates.longitude}\n                onClose={()=>{\n                    setShowInfo(false)\n                    setIndividualShow(null)\n                }}\n                >\n                    <Plot data={dataForBar} layout={layoutForBar} />\n                </Popup>\n                :null}\n            </ReactMapGL>\n        </>\n    )\n}\n\nexport default Map\n"]},"metadata":{},"sourceType":"module"}