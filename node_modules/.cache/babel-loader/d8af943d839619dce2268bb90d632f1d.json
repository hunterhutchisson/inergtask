{"ast":null,"code":"import { LOAD_DATA } from \"../actions/types\";\nimport * as stateCoordList from '../assets/data.json';\nconst initialState = {\n  usData: {},\n  stateData: []\n};\n\nconst covidDataReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case LOAD_DATA:\n      let statelist = [...action.data.stateData];\n      statelist.map((state, index) => {\n        if (state.state === stateCoordList.states[index].name) {\n          return state.coordinates = stateCoordList.states[index];\n        }\n      });\n      return { ...state,\n        usData: action.data.usData,\n        stateData: statelist\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default covidDataReducer;","map":{"version":3,"sources":["/Users/hunterhutchisson/digital-crafts/inergtask/src/reducers/covidDataReducer.js"],"names":["LOAD_DATA","stateCoordList","initialState","usData","stateData","covidDataReducer","state","action","type","statelist","data","map","index","states","name","coordinates"],"mappings":"AAAA,SAASA,SAAT,QAA0B,kBAA1B;AACA,OAAO,KAAMC,cAAb,MAAiC,qBAAjC;AAGA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,MAAM,EAAE,EADS;AAEjBC,EAAAA,SAAS,EAAE;AAFM,CAArB;;AAKA,MAAMC,gBAAgB,GAAG,YAAgC;AAAA,MAA/BC,KAA+B,uEAAzBJ,YAAyB;AAAA,MAAXK,MAAW;;AACrD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKR,SAAL;AACI,UAAIS,SAAS,GAAG,CAAC,GAAGF,MAAM,CAACG,IAAP,CAAYN,SAAhB,CAAhB;AACAK,MAAAA,SAAS,CAACE,GAAV,CAAc,CAACL,KAAD,EAAQM,KAAR,KAAgB;AAC1B,YAAGN,KAAK,CAACA,KAAN,KAAgBL,cAAc,CAACY,MAAf,CAAsBD,KAAtB,EAA6BE,IAAhD,EAAqD;AACjD,iBAAOR,KAAK,CAACS,WAAN,GAAoBd,cAAc,CAACY,MAAf,CAAsBD,KAAtB,CAA3B;AACH;AACJ,OAJD;AAKA,aAAO,EACH,GAAGN,KADA;AAEHH,QAAAA,MAAM,EAAEI,MAAM,CAACG,IAAP,CAAYP,MAFjB;AAGHC,QAAAA,SAAS,EAAEK;AAHR,OAAP;;AAKJ;AACI,aAAOH,KAAP;AAdR;AAgBH,CAjBD;;AAmBA,eAAeD,gBAAf","sourcesContent":["import { LOAD_DATA } from \"../actions/types\"\nimport * as  stateCoordList from '../assets/data.json';\n\n\nconst initialState = {\n    usData: {},\n    stateData: []\n}\n\nconst covidDataReducer = (state=initialState, action) => {\n    switch(action.type){\n        case LOAD_DATA:\n            let statelist = [...action.data.stateData]\n            statelist.map((state, index)=>{\n                if(state.state === stateCoordList.states[index].name){\n                    return state.coordinates = stateCoordList.states[index]\n                }\n            })\n            return {\n                ...state,\n                usData: action.data.usData,\n                stateData: statelist\n            }\n        default:\n            return state\n    }\n}\n\nexport default covidDataReducer"]},"metadata":{},"sourceType":"module"}