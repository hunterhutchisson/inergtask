{"ast":null,"code":"var _jsxFileName = \"/Users/hunterhutchisson/digital-crafts/inergtask/src/components/Map.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport ReactMapGL, { Marker, Popup } from 'react-map-gl';\nimport Plot from 'react-plotly.js';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Map = _ref => {\n  _s();\n\n  let {\n    stateObj\n  } = _ref;\n  const stateData = useSelector(state => state.covidData.stateData);\n  const viewTheme = useSelector(state => state.covidData.viewTheme);\n  const [dataForBar, setDataForBar] = useState(stateObj ? [{\n    y: [stateObj.positive, stateObj.hospitalizedCurrently, stateObj.positive - stateObj.hospitalizedCurrently - stateObj.death, stateObj.death],\n    x: ['Total Cases', 'Active Cases', 'Recovered', 'Deaths'],\n    type: 'bar'\n  }] : \"\");\n  const [layoutForBar, setLayoutForBar] = useState(stateObj ? {\n    width: 600,\n    height: 500,\n    title: `${stateObj.state} covid cases`\n  } : \"\");\n  const [viewport, setViewport] = useState({\n    longitude: -97,\n    latitude: 40,\n    width: \"975px\",\n    height: \"700px\",\n    zoom: 3\n  });\n  const [showInfo, setShowInfo] = useState(false);\n  const [individualShow, setIndividualShow] = useState(null);\n  useEffect(() => {\n    const listener = e => {\n      if (e.key === \"Escape\") {\n        setShowInfo(false);\n      }\n    };\n\n    window.addEventListener(\"keydown\", listener);\n    return () => {\n      window.removeEventListener(\"keydown\", listener);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ReactMapGL, { ...viewport,\n      mapboxApiAccessToken: process.env.REACT_APP_MAPBOX_TOKEN,\n      mapStyle: viewTheme === \"night\" ? 'mapbox://styles/hunterhutch/ckwjv9etg27z614r7bdgamfwl' : 'mapbox://styles/hunterhutch/ckxctvmvk1dsc14okoj98g9ev',\n      onViewportChange: viewport => {\n        setViewport(viewport);\n      },\n      children: [stateObj ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Marker, {\n          latitude: stateObj.coordinates.latitude,\n          longitude: stateObj.coordinates.longitude,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-size\",\n            onClick: e => {\n              e.preventDefault();\n              setShowInfo(!showInfo);\n            },\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: \"syringe\",\n              className: \"icon-size\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 28\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, this)\n      }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: stateData.map(state => {\n          return /*#__PURE__*/_jsxDEV(Marker, {\n            latitude: state.coordinates.latitude,\n            longitude: state.coordinates.longitude,\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn-size\",\n              onClick: e => {\n                e.preventDefault();\n                setShowInfo(!showInfo);\n                setIndividualShow(state);\n                setDataForBar([{\n                  y: [state.positive, state.hospitalizedCurrently, state.positive - state.hospitalizedCurrently - state.death, state.death],\n                  x: ['Total Cases', 'Active Cases', 'Recovered', 'Deaths'],\n                  type: 'bar'\n                }]);\n                setLayoutForBar({\n                  width: 400,\n                  height: 300,\n                  title: `${state.state} covid cases`\n                });\n              },\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: \"syringe\",\n                className: \"icon-size\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 32\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this);\n        })\n      }, void 0, false), showInfo && stateObj ? /*#__PURE__*/_jsxDEV(Popup, {\n        latitude: stateObj.coordinates.latitude,\n        longitude: stateObj.coordinates.longitude,\n        onClose: () => {\n          setShowInfo(false);\n          setIndividualShow(null);\n        },\n        children: /*#__PURE__*/_jsxDEV(Plot, {\n          data: dataForBar,\n          layout: layoutForBar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this) : null, showInfo && individualShow ? /*#__PURE__*/_jsxDEV(Popup, {\n        latitude: individualShow.coordinates.latitude,\n        longitude: individualShow.coordinates.longitude,\n        onClose: () => {\n          setShowInfo(false);\n          setIndividualShow(null);\n        },\n        children: /*#__PURE__*/_jsxDEV(Plot, {\n          data: dataForBar,\n          layout: layoutForBar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Map, \"MzlRhDRxHovWbBg3jEYItk7YNhg=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = Map;\nexport default Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["/Users/hunterhutchisson/digital-crafts/inergtask/src/components/Map.jsx"],"names":["React","useState","useEffect","useSelector","ReactMapGL","Marker","Popup","Plot","FontAwesomeIcon","Map","stateObj","stateData","state","covidData","viewTheme","dataForBar","setDataForBar","y","positive","hospitalizedCurrently","death","x","type","layoutForBar","setLayoutForBar","width","height","title","viewport","setViewport","longitude","latitude","zoom","showInfo","setShowInfo","individualShow","setIndividualShow","listener","e","key","window","addEventListener","removeEventListener","process","env","REACT_APP_MAPBOX_TOKEN","coordinates","preventDefault","map"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport { useSelector } from 'react-redux';\nimport ReactMapGL, {Marker, Popup} from 'react-map-gl';\nimport Plot from 'react-plotly.js';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\n\nconst Map = ({stateObj}) => {\n    const stateData = useSelector(state => state.covidData.stateData)\n    const viewTheme = useSelector(state => state.covidData.viewTheme)\n    const [dataForBar, setDataForBar] = useState(stateObj ? [{\n        y: [stateObj.positive, stateObj.hospitalizedCurrently, (stateObj.positive-stateObj.hospitalizedCurrently-stateObj.death),stateObj.death],\n        x: ['Total Cases', 'Active Cases', 'Recovered','Deaths'],\n        type: 'bar'\n    }]:\"\")\n    const [layoutForBar, setLayoutForBar] = useState(stateObj ? {\n        width: 600,\n        height: 500,\n        title: `${stateObj.state} covid cases`\n    }:\"\")\n\n    const [viewport, setViewport] = useState({\n        longitude:-97,\n        latitude:40,\n        width: \"975px\",\n        height: \"700px\",\n        zoom: 3\n    })\n\n    const [showInfo, setShowInfo] = useState(false)\n    const [individualShow, setIndividualShow] = useState(null)\n\n    useEffect(() => {\n        const listener = (e) => {\n            if(e.key === \"Escape\"){\n                setShowInfo(false)\n            }\n        }\n        window.addEventListener(\"keydown\", listener)\n        return() =>{\n            window.removeEventListener(\"keydown\", listener)\n        }\n    }, [])\n    return (\n        <>\n            <ReactMapGL {...viewport} \n            mapboxApiAccessToken={process.env.REACT_APP_MAPBOX_TOKEN} \n            mapStyle={(viewTheme === \"night\") ? 'mapbox://styles/hunterhutch/ckwjv9etg27z614r7bdgamfwl':'mapbox://styles/hunterhutch/ckxctvmvk1dsc14okoj98g9ev'}\n            onViewportChange={viewport => {\n                setViewport(viewport)\n            }}\n            >\n                {stateObj \n                ?\n                <>\n                <Marker latitude={stateObj.coordinates.latitude} longitude={stateObj.coordinates.longitude}>\n                    <button className=\"btn-size\" onClick={(e) => {\n                        e.preventDefault();\n                        setShowInfo(!showInfo)\n                        }}><FontAwesomeIcon icon=\"syringe\" className=\"icon-size\" />\n                    </button>\n                </Marker>\n                </>\n                :\n                <>\n                    {stateData.map(state=>{\n                        return(\n                        <Marker latitude={state.coordinates.latitude} longitude={state.coordinates.longitude}>\n                            <button className=\"btn-size\" onClick={(e) => {\n                                e.preventDefault();\n                                setShowInfo(!showInfo)\n                                setIndividualShow(state)\n                                setDataForBar([{\n                                    y: [state.positive, state.hospitalizedCurrently, (state.positive-state.hospitalizedCurrently-state.death),state.death],\n                                    x: ['Total Cases', 'Active Cases', 'Recovered','Deaths'],\n                                    type: 'bar'\n                                }])\n                                setLayoutForBar({\n                                    width: 400,\n                                    height: 300,\n                                    title: `${state.state} covid cases`\n                                })\n                            }}><FontAwesomeIcon icon=\"syringe\" className=\"icon-size\"/></button>\n                        </Marker>\n                        )\n                    })}\n                </>\n                }\n\n                {(showInfo && stateObj)\n                ? \n                <Popup latitude={stateObj.coordinates.latitude} \n                longitude={stateObj.coordinates.longitude}\n                onClose={()=>{\n                    setShowInfo(false)\n                    setIndividualShow(null)\n                }}\n                >\n                    <Plot data={dataForBar} layout={layoutForBar} />\n                </Popup>\n                :null}\n                {(showInfo && individualShow)\n                ? \n                <Popup latitude={individualShow.coordinates.latitude} \n                longitude={individualShow.coordinates.longitude}\n                onClose={()=>{\n                    setShowInfo(false)\n                    setIndividualShow(null)\n                }}\n                >\n                    <Plot data={dataForBar} layout={layoutForBar} />\n                </Popup>\n                :null}\n            </ReactMapGL>\n        </>\n    )\n}\n\nexport default Map\n"]},"metadata":{},"sourceType":"module"}