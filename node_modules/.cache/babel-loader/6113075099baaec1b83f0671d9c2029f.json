{"ast":null,"code":"var _jsxFileName = \"/Users/hunterhutchisson/digital-crafts/inergtask/src/components/Map.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport ReactMapGL, { Marker, Popup } from 'react-map-gl';\nimport Plot from 'react-plotly.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Map = _ref => {\n  _s();\n\n  let {\n    stateObj\n  } = _ref;\n  const stateData = useSelector(state => state.covidData.stateData);\n  use;\n  console.log(stateData);\n  const [dataForBar, setDataForBar] = useState(stateObj ? [{\n    y: [stateObj.positive, stateObj.hospitalizedCurrently, stateObj.positive - stateObj.hospitalizedCurrently - stateObj.death, stateObj.death],\n    x: ['Total Cases', 'Active Cases', 'Recovered', 'Deaths'],\n    type: 'bar'\n  }] : \"\");\n  const [layoutForBar, setLayoutForBar] = useState(stateObj ? {\n    width: 600,\n    height: 500,\n    title: `${stateObj.state} covid cases`\n  } : \"\");\n  const [viewport, setViewport] = useState({\n    longitude: -97,\n    latitude: 40,\n    width: \"1000px\",\n    height: \"1000px\",\n    zoom: 2.5\n  });\n  const [showInfo, setShowInfo] = useState(false);\n  useEffect(() => {\n    const listener = e => {\n      if (e.key === \"Escape\") {\n        setShowInfo(false);\n      }\n    };\n\n    window.addEventListener(\"keydown\", listener);\n    return () => {\n      window.removeEventListener(\"keydown\", listener);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ReactMapGL, { ...viewport,\n      mapboxApiAccessToken: process.env.REACT_APP_MAPBOX_TOKEN,\n      mapStyle: \"mapbox://styles/hunterhutch/ckwjv9etg27z614r7bdgamfwl\",\n      onViewportChange: viewport => {\n        setViewport(viewport);\n      },\n      children: [stateObj ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Marker, {\n          latitude: stateObj.coordinates.latitude,\n          longitude: stateObj.coordinates.longitude,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: e => {\n              e.preventDefault();\n              setShowInfo(!showInfo);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this)\n      }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: stateData.map(state => {\n          return /*#__PURE__*/_jsxDEV(Marker, {\n            latitude: state.coordinates.latitude,\n            longitude: state.coordinates.longitude,\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: e => {\n                e.preventDefault();\n                setShowInfo(!showInfo);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this);\n        })\n      }, void 0, false), showInfo && stateObj ? /*#__PURE__*/_jsxDEV(Popup, {\n        latitude: stateObj.coordinates.latitude,\n        longitude: stateObj.coordinates.longitude,\n        onClose: () => {\n          setShowInfo(false);\n        },\n        children: /*#__PURE__*/_jsxDEV(Plot, {\n          data: dataForBar,\n          layout: layoutForBar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this) : null, showInfo && !stateObj ? /*#__PURE__*/_jsxDEV(Popup, {\n        latitude: stateObj.coordinates.latitude,\n        longitude: stateObj.coordinates.longitude,\n        onClose: () => {\n          setShowInfo(false);\n        },\n        children: /*#__PURE__*/_jsxDEV(Plot, {\n          data: dataForBar,\n          layout: layoutForBar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Map, \"v9XbSolJVAGsDNaX8WJb0S7trY4=\", false, function () {\n  return [useSelector];\n});\n\n_c = Map;\nexport default Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["/Users/hunterhutchisson/digital-crafts/inergtask/src/components/Map.jsx"],"names":["React","useState","useEffect","useSelector","ReactMapGL","Marker","Popup","Plot","Map","stateObj","stateData","state","covidData","use","console","log","dataForBar","setDataForBar","y","positive","hospitalizedCurrently","death","x","type","layoutForBar","setLayoutForBar","width","height","title","viewport","setViewport","longitude","latitude","zoom","showInfo","setShowInfo","listener","e","key","window","addEventListener","removeEventListener","process","env","REACT_APP_MAPBOX_TOKEN","coordinates","preventDefault","map"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport { useSelector } from 'react-redux';\nimport ReactMapGL, {Marker, Popup} from 'react-map-gl';\nimport Plot from 'react-plotly.js';\n\n\nconst Map = ({stateObj}) => {\n    const stateData = useSelector(state => state.covidData.stateData)\n    use\n    console.log(stateData);\n    const [dataForBar, setDataForBar] = useState(stateObj ? [{\n        y: [stateObj.positive, stateObj.hospitalizedCurrently, (stateObj.positive-stateObj.hospitalizedCurrently-stateObj.death),stateObj.death],\n        x: ['Total Cases', 'Active Cases', 'Recovered','Deaths'],\n        type: 'bar'\n    }]:\"\")\n    const [layoutForBar, setLayoutForBar] = useState(stateObj ? {\n        width: 600,\n        height: 500,\n        title: `${stateObj.state} covid cases`\n    }:\"\")\n\n    const [viewport, setViewport] = useState({\n        longitude:-97,\n        latitude:40,\n        width: \"1000px\",\n        height: \"1000px\",\n        zoom: 2.5\n    })\n    const [showInfo, setShowInfo] = useState(false)\n\n    useEffect(() => {\n        const listener = (e) => {\n            if(e.key === \"Escape\"){\n                setShowInfo(false)\n            }\n        }\n        window.addEventListener(\"keydown\", listener)\n        return() =>{\n            window.removeEventListener(\"keydown\", listener)\n        }\n    }, [])\n    return (\n        <>\n            <ReactMapGL {...viewport} \n            mapboxApiAccessToken={process.env.REACT_APP_MAPBOX_TOKEN} \n            mapStyle='mapbox://styles/hunterhutch/ckwjv9etg27z614r7bdgamfwl'\n            onViewportChange={viewport => {\n                setViewport(viewport)\n            }}\n            >\n                {stateObj \n                ?\n                <>\n                <Marker latitude={stateObj.coordinates.latitude} longitude={stateObj.coordinates.longitude}>\n                    <button onClick={(e) => {\n              e.preventDefault();\n              setShowInfo(!showInfo)\n            }}></button>\n                </Marker>\n                </>\n                :\n                <>\n                    {stateData.map(state=>{\n                        return(\n                        <Marker latitude={state.coordinates.latitude} longitude={state.coordinates.longitude}>\n                            <button onClick={(e) => {\n                                e.preventDefault();\n                                setShowInfo(!showInfo)\n                                \n                            }}></button>\n                        </Marker>\n                        )\n                    })}\n                </>\n                }\n\n\n                {(showInfo && stateObj)\n                ? \n                <Popup latitude={stateObj.coordinates.latitude} \n                longitude={stateObj.coordinates.longitude}\n                onClose={()=>{\n                    setShowInfo(false)\n                }}\n                >\n                    <Plot data={dataForBar} layout={layoutForBar} />\n                </Popup>\n                :null}\n                {(showInfo && !stateObj)\n                ? \n                <Popup latitude={stateObj.coordinates.latitude} \n                longitude={stateObj.coordinates.longitude}\n                onClose={()=>{\n                    setShowInfo(false)\n                }}\n                >\n                    <Plot data={dataForBar} layout={layoutForBar} />\n                </Popup>\n                :null}\n            </ReactMapGL>\n        </>\n    )\n}\n\nexport default Map\n"]},"metadata":{},"sourceType":"module"}