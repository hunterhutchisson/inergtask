{"ast":null,"code":"import _slicedToArray from\"/Users/hunterhutchisson/digital-crafts/inergtask/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{useSelector,useDispatch}from'react-redux';import Plot from'react-plotly.js';import Map from'./Map';import{selectState}from'../actions';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var SelectState=function SelectState(){var dispatch=useDispatch();var usData=useSelector(function(state){return state.covidData.usData;});var stateData=useSelector(function(state){return state.covidData.stateData;});var _useState=useState(null),_useState2=_slicedToArray(_useState,2),selectedState=_useState2[0],setSelectedState=_useState2[1];var handleSelectState=function handleSelectState(e){var state=stateData.find(function(_ref){var state=_ref.state;return state===e.target.value;});dispatch(selectState(state));};var handleResetState=function handleResetState(){setSelectedState(null);dispatch(selectState(null));};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"select\",{defaultValue:selectedState,onChange:handleSelectState,children:[/*#__PURE__*/_jsx(\"option\",{hidden:true,value:\"defaultValue\",children:\"Pick a State\"}),stateData.map(function(state){return/*#__PURE__*/_jsx(\"option\",{value:state.state,children:state.state},state.state);})]}),/*#__PURE__*/_jsx(\"button\",{onClick:handleResetState,children:\"Reset\"})]});};export default SelectState;","map":{"version":3,"sources":["/Users/hunterhutchisson/digital-crafts/inergtask/src/components/SelectState.jsx"],"names":["React","useState","useSelector","useDispatch","Plot","Map","selectState","SelectState","dispatch","usData","state","covidData","stateData","selectedState","setSelectedState","handleSelectState","e","find","target","value","handleResetState","map"],"mappings":"mIAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,KAA8B,OAA9B,CACA,OAAQC,WAAR,CAAqBC,WAArB,KAAuC,aAAvC,CACA,MAAOC,CAAAA,IAAP,KAAiB,iBAAjB,CACA,MAAOC,CAAAA,GAAP,KAAgB,OAAhB,CACA,OAASC,WAAT,KAA4B,YAA5B,C,6IAGA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACtB,GAAMC,CAAAA,QAAQ,CAAGL,WAAW,EAA5B,CACA,GAAMM,CAAAA,MAAM,CAAGP,WAAW,CAAC,SAAAQ,KAAK,QAAIA,CAAAA,KAAK,CAACC,SAAN,CAAgBF,MAApB,EAAN,CAA1B,CACA,GAAMG,CAAAA,SAAS,CAAGV,WAAW,CAAC,SAAAQ,KAAK,QAAIA,CAAAA,KAAK,CAACC,SAAN,CAAgBC,SAApB,EAAN,CAA7B,CACA,cAA0CX,QAAQ,CAAC,IAAD,CAAlD,wCAAOY,aAAP,eAAsBC,gBAAtB,eAEA,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACC,CAAD,CAAO,CAC7B,GAAIN,CAAAA,KAAK,CAAGE,SAAS,CAACK,IAAV,CAAe,kBAAEP,CAAAA,KAAF,MAAEA,KAAF,OAAYA,CAAAA,KAAK,GAAKM,CAAC,CAACE,MAAF,CAASC,KAA/B,EAAf,CAAZ,CACAX,QAAQ,CAACF,WAAW,CAACI,KAAD,CAAZ,CAAR,CACH,CAHD,CAIA,GAAMU,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,EAAM,CAC3BN,gBAAgB,CAAC,IAAD,CAAhB,CACAN,QAAQ,CAACF,WAAW,CAAC,IAAD,CAAZ,CAAR,CACH,CAHD,CAIA,mBACI,wCACA,gBAAQ,YAAY,CAAEO,aAAtB,CAAqC,QAAQ,CAAEE,iBAA/C,wBACE,eAAQ,MAAM,KAAd,CAAe,KAAK,CAAC,cAArB,0BADF,CAEGH,SAAS,CAACS,GAAV,CAAc,SAAAX,KAAK,CAAI,CACtB,mBAAO,eAA0B,KAAK,CAAEA,KAAK,CAACA,KAAvC,UAA+CA,KAAK,CAACA,KAArD,EAAaA,KAAK,CAACA,KAAnB,CAAP,CACD,CAFA,CAFH,GADA,cAQE,eAAQ,OAAO,CAAEU,gBAAjB,mBARF,GADJ,CAaH,CA3BD,CA6BA,cAAeb,CAAAA,WAAf","sourcesContent":["import React, {useState} from 'react'\nimport {useSelector, useDispatch} from 'react-redux';\nimport Plot from 'react-plotly.js';\nimport Map from './Map';\nimport { selectState } from '../actions'\n\n\nconst SelectState = () => {\n    const dispatch = useDispatch();\n    const usData = useSelector(state => state.covidData.usData)\n    const stateData = useSelector(state => state.covidData.stateData)\n    const [selectedState, setSelectedState] = useState(null)\n\n    const handleSelectState = (e) => {\n        let state = stateData.find(({state})=> state === e.target.value)\n        dispatch(selectState(state))\n    }\n    const handleResetState = () => {\n        setSelectedState(null)\n        dispatch(selectState(null))\n    }\n    return (\n        <>\n        <select defaultValue={selectedState} onChange={handleSelectState}>\n          <option hidden value=\"defaultValue\">Pick a State</option>\n          {stateData.map(state => {\n            return <option key={state.state} value={state.state}>{state.state}</option>\n          })}\n        </select>\n\n          <button onClick={handleResetState}>Reset</button>\n        \n        </>\n    )\n}\n\nexport default SelectState\n"]},"metadata":{},"sourceType":"module"}