{"ast":null,"code":"import _regeneratorRuntime from\"/Users/hunterhutchisson/digital-crafts/inergtask/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/hunterhutchisson/digital-crafts/inergtask/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{INCREMENT,LOAD_DATA,SELECT_STATE}from\"./types\";import axios from'axios';export var loadData=function loadData(){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var usResponse,statesResponse;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return axios.get('https://api.covidtracking.com/v1/us/current.json');case 3:usResponse=_context.sent;_context.next=6;return axios.get('https://api.covidtracking.com/v1/states/current.json');case 6:statesResponse=_context.sent;dispatch({type:LOAD_DATA,data:{usData:usResponse.data[0],stateData:statesResponse.data}});_context.next=13;break;case 10:_context.prev=10;_context.t0=_context[\"catch\"](0);console.log('err:',_context.t0);case 13:case\"end\":return _context.stop();}}},_callee,null,[[0,10]]);}));return function(_x){return _ref.apply(this,arguments);};}();};export var selectState=function selectState(state){return{type:SELECT_STATE,data:state};};","map":{"version":3,"sources":["/Users/hunterhutchisson/digital-crafts/inergtask/src/actions/index.js"],"names":["INCREMENT","LOAD_DATA","SELECT_STATE","axios","loadData","dispatch","get","usResponse","statesResponse","type","data","usData","stateData","console","log","selectState","state"],"mappings":"mQACA,OAASA,SAAT,CAAoBC,SAApB,CAA+BC,YAA/B,KAAmD,SAAnD,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CAEA,MAAO,IAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,kGAAM,iBAAMC,QAAN,sLAECF,CAAAA,KAAK,CAACG,GAAN,CAAU,kDAAV,CAFD,QAElBC,UAFkB,qCAGKJ,CAAAA,KAAK,CAACG,GAAN,CAAU,sDAAV,CAHL,QAGlBE,cAHkB,eAItBH,QAAQ,CAAC,CACLI,IAAI,CAAER,SADD,CAELS,IAAI,CAAE,CACFC,MAAM,CAAEJ,UAAU,CAACG,IAAX,CAAgB,CAAhB,CADN,CAEFE,SAAS,CAAEJ,cAAc,CAACE,IAFxB,CAFD,CAAD,CAAR,CAJsB,iFAYtBG,OAAO,CAACC,GAAR,CAAY,MAAZ,cAZsB,qEAAN,gEAAjB,CAgBP,MAAO,IAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,KAAD,CAAW,CAClC,MAAO,CACHP,IAAI,CAAEP,YADH,CAEHQ,IAAI,CAAEM,KAFH,CAAP,CAIH,CALM","sourcesContent":["\nimport { INCREMENT, LOAD_DATA, SELECT_STATE } from \"./types\"\nimport axios from 'axios'\n\nexport const loadData = () => async dispatch => {\n    try{\n        let usResponse = await axios.get('https://api.covidtracking.com/v1/us/current.json')\n        let statesResponse = await axios.get('https://api.covidtracking.com/v1/states/current.json')\n        dispatch({\n            type: LOAD_DATA,\n            data: {\n                usData: usResponse.data[0],\n                stateData: statesResponse.data\n            }\n        })\n    } catch(err){\n        console.log('err:', err)\n    }\n}\n\nexport const selectState = (state) => {\n    return {\n        type: SELECT_STATE,\n        data: state\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}